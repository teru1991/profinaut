name: Vault Init (Service Token)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'  # ÊØéÈÄ±ÊúàÊõú 0:00 UTC = ÊúàÊõú 9:00 JST

jobs:
  init-vault:
    name: üîê Vault Service Token Init & Secrets Sync
    runs-on: ubuntu-latest

    env:
      VAULT_ADDR: https://vault.profinaut.studiokeke.com:8200
      VAULT_CERT: /tmp/origin_ca.pem

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üèó Install Python dependencies
        run: pip install requests python-dotenv pyyaml

      - name: üßæ Prepare Origin CA Cert
        run: |
          mkdir -p /tmp
          echo "${{ secrets.VAULT_ORIGIN_CA_PEM }}" > /tmp/origin_ca.pem

      - name: üåê Export Cloudflare Access Headers
        run: |
          echo "CF_ACCESS_CLIENT_ID=${{ secrets.CF_ACCESS_CLIENT_ID }}" >> $GITHUB_ENV
          echo "CF_ACCESS_CLIENT_SECRET=${{ secrets.CF_ACCESS_CLIENT_SECRET }}" >> $GITHUB_ENV

      - name: üîê Upload Vault Policies
        run: |
          python3 docker/vault/scripts/create_policies.py
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}

      - name: üß¨ Upload AppRoles & Generate env.generated
        run: |
          python3 docker/vault/scripts/create_approles.py
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}

      - name: üîÅ Sync to GitHub Secrets
        uses: gliech/create-github-secret-action@v1
        with:
          secrets: |
            $(awk -F= '{ printf "%s: %s\n", $1, $2 }' docker/vault/scripts/env.generated)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
