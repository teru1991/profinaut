name: 🔍 Vault Cloudflare Tunnel Diagnostics

on:
  workflow_dispatch:

jobs:
  diagnose-vault:
    runs-on: ubuntu-latest

    steps:
      - name: 📁 Step 1: Checkout
        uses: actions/checkout@v4

      - name: 📥 Step 2: Install curl and unzip (if needed)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip

      - name: 📄 Step 3: 確認用証明書ファイルの保存
        run: |
          mkdir -p /tmp
          echo "${{ secrets.VAULT_ROOT_CA_PEM }}" > /tmp/origin_ca.pem

      - name: 🌐 Step 4: VaultへのHealthチェック（CF Access経由）
        run: |
          echo "➡️ Vaultへ接続テスト開始..."
          curl -vk https://vault.profinaut.studiokeke.com:8200/v1/sys/health \
            -H "CF-Access-Client-Id: $CF_ACCESS_CLIENT_ID" \
            -H "CF-Access-Client-Secret: $CF_ACCESS_CLIENT_SECRET" \
            --cacert "$VAULT_CERT"
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
          VAULT_CERT: /tmp/origin_ca.pem

      - name: 🧪 Step 5: Vaultへテストリクエスト送信
        run: |
          echo "➡️ テスト用シークレットを送信..."
          PAYLOAD='{
            "data": {
              "diagnostic": "Vaultアクセス成功"
            }
          }'
          curl -X POST "$VAULT_ADDR/v1/secret/data/diagnostic" \
            -H "CF-Access-Client-Id: $CF_ACCESS_CLIENT_ID" \
            -H "CF-Access-Client-Secret: $CF_ACCESS_CLIENT_SECRET" \
            -H "Content-Type: application/json" \
            --data "$PAYLOAD" \
            --cacert "$VAULT_CERT"
        env:
          VAULT_ADDR: https://vault.profinaut.studiokeke.com:8200
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
          VAULT_CERT: /tmp/origin_ca.pem

