name: Vault_Tunnel_Diagnostic_Step_by_Step

on:
  workflow_dispatch:

jobs:
  diagnose_vault:
    runs-on: ubuntu-latest

    env:
      VAULT_BASE_URL: https://vault.profinaut.studiokeke.com
      VAULT_PORT: 443
      CF_ACCESS_CLIENT_ID: ${{ secrets.VAULT_CF_ACCESS_CLIENT_ID }}
      CF_ACCESS_CLIENT_SECRET: ${{ secrets.VAULT_CF_ACCESS_CLIENT_SECRET }}
      VAULT_ROOT_CA_PEM: ${{ secrets.VAULT_ROOT_CA_PEM }}

    steps:
      - name: step_1_checkout
        uses: actions/checkout@v4

      - name: step_2_install_tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl dnsutils netcat-openbsd openssl

      - name: step_3_dns_lookup
        run: |
          echo "🔍 dig +short vault.profinaut.studiokeke.com"
          dig +short vault.profinaut.studiokeke.com || echo "❌ DNS解決に失敗"

      - name: step_4_tcp_443_reachability
        run: |
          echo "🔌 Checking TCP reachability on port 443..."
          nc -zv vault.profinaut.studiokeke.com 443 || echo "❌ TCP 443 unreachable"

      - name: step_5_tls_handshake
        run: |
          echo "🔐 TLS handshake via openssl..."
          timeout 10 bash -c 'echo | openssl s_client \
            -connect vault.profinaut.studiokeke.com:${VAULT_PORT} \
            -servername vault.profinaut.studiokeke.com \
            -showcerts -CApath /etc/ssl/certs -brief' || echo "❌ TLS handshake failed"

      - name: step_6_1_force_ip_resolve_curl
        run: |
          IP=$(dig +short vault.profinaut.studiokeke.com | tail -n1)
          echo "📡 Resolved IP: $IP"
          curl -vk --resolve vault.profinaut.studiokeke.com:${VAULT_PORT}:$IP \
            ${VAULT_BASE_URL}/v1/sys/health || echo "❌ IP直指定接続失敗"

      - name: step_6_2_curl_with_manual_ca
        run: |
          echo "$VAULT_ROOT_CA_PEM" > /tmp/vault_root_ca.pem
          curl -vk --cacert /tmp/vault_root_ca.pem \
            ${VAULT_BASE_URL}/v1/sys/health || echo "❌ 手動CA指定接続失敗"

      - name: step_6_3_health_without_cf_access
        run: |
          echo "🌐 Request without CF headers (expect 401 or 403)"
          curl -i -sS ${VAULT_BASE_URL}/v1/sys/health || echo "❌ 通常リクエスト失敗"

      - name: step_7_health_with_cf_access
        run: |
          echo "✅ Request with CF Access Headers"
          curl -i -sS \
            -H "CF-Access-Client-Id: ${CF_ACCESS_CLIENT_ID}" \
            -H "CF-Access-Client-Secret: ${CF_ACCESS_CLIENT_SECRET}" \
            ${VAULT_BASE_URL}/v1/sys/health || echo "❌ ヘッダー付きリクエスト失敗"

      - name: step_8_verbose_tls_with_headers
        run: |
          echo "🔎 Verbose TLS output with headers"
          curl -vk \
            -H "CF-Access-Client-Id: ${CF_ACCESS_CLIENT_ID}" \
            -H "CF-Access-Client-Secret: ${CF_ACCESS_CLIENT_SECRET}" \
            ${VAULT_BASE_URL}/v1/sys/health || echo "❌ TLS + ヘッダー接続失敗"

      - name: step_9_tls_trace_debug
        run: |
          echo "📘 --trace-ascii を使った詳細追跡"
          curl --trace-ascii /dev/stdout -s \
            -H "CF-Access-Client-Id: ${CF_ACCESS_CLIENT_ID}" \
            -H "CF-Access-Client-Secret: ${CF_ACCESS_CLIENT_SECRET}" \
            ${VAULT_BASE_URL}/v1/sys/health || echo "❌ Trace付き失敗"